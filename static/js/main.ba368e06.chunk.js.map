{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","error","onChange","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","Header","branding","href","Test","title","body","fetch","then","response","json","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"qSAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAOA,EAAOC,MACZ,IAAK,iBACH,OAAO,eACFF,EADL,CAEEG,SAAUH,EAAMG,SAASC,QAAO,SAAAC,GAAO,OACvCA,EAAQC,KAAOL,EAAOM,aAE1B,IAAK,cACH,OAAO,eACFP,EADL,CAEEG,SAAS,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,aAGxC,IAAK,iBACH,OAAO,eACFH,EADL,CAEEG,SAAUH,EAAMG,SAASK,KAAI,SAAAH,GAAO,OACpCA,EAAQC,KAAOL,EAAOM,QAAQD,GAAMD,EAClCJ,EAAOM,QAAUF,OAEvB,QACE,OAAOL,IAIAS,EAAb,4MACET,MAAQ,CACNG,SAAU,GAGVO,SAAU,SAAAT,GAAM,OAAI,EAAKU,UAAS,SAAAX,GAAK,OACvCD,EAAQC,EAAOC,QANnB,kMAUsBW,IACjBC,IACA,8CAZL,OAUUC,EAVV,OAcIC,KAAKJ,SAAS,CAACR,SAAUW,EAAIE,OAdjC,qIAkBI,OACE,kBAACpB,EAAQa,SAAT,CAAkBQ,MAAOF,KAAKf,OAC3Be,KAAKG,MAAMC,cApBpB,GAA8BC,aA0BjBC,EAAWzB,EAAQyB,SCiBjBC,E,4MAlEbtB,MAAQ,CACNuB,iBAAiB,G,EAGnBC,c,uCAAgB,WAAOlB,EAAII,GAAX,SAAAe,EAAA,sEACTb,IAAMc,OAAN,qDAC0CpB,IAFjC,OAGdI,EAAS,CAAER,KAAM,iBAAkBK,QAASD,IAH9B,2C,+GAMN,IAAD,SAC4BS,KAAKG,MAAMb,QAAtCC,EADD,EACCA,GAAIqB,EADL,EACKA,KAAMC,EADX,EACWA,MAAOC,EADlB,EACkBA,MACjBN,EAAoBR,KAAKf,MAAzBuB,gBAER,OACE,kBAACF,EAAD,MACG,SAAAJ,GAAU,IACDP,EAAaO,EAAbP,SACR,OACA,yBAAKoB,UAAU,uBACb,4BACGH,EAAM,IACL,uBACAI,QAAS,kBACP,EAAKpB,SAAS,CAACY,iBACd,EAAKvB,MAAMuB,mBACdO,UAAU,mBACVE,MAAO,CAACC,OAAO,aAEf,uBACEH,UAAU,eACVE,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OACnDJ,QAAS,EAAKP,cAAcY,KACzB,EAAM9B,EAAII,KAEf,kBAAC,IAAD,CAAM2B,GAAE,uBAAkB/B,IACxB,uBACAwB,UAAU,oBACVE,MAAO,CACLC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPG,YAAa,YAMtBf,EACC,wBAAIO,UAAU,cACZ,wBAAIA,UAAU,mBAAd,UAAwCF,GACxC,wBAAIE,UAAU,mBAAd,UAAwCD,IAExC,a,GAtDQT,aCwBPmB,E,uKAvBX,OACE,kBAAClB,EAAD,MACG,SAAAJ,GAAU,IACDd,EAAac,EAAbd,SACR,OACE,kBAAC,IAAMqC,SAAP,KACE,wBAAIV,UAAU,kBACZ,0BAAMA,UAAU,eAAhB,WADF,SAGD3B,EAASK,KAAI,SAAAH,GAAO,OACrB,kBAAC,EAAD,CACAoC,IAAKpC,EAAQC,GACbD,QAASA,e,GAfGe,a,yBCDlBsB,EAAiB,SAAC,GAQjB,IAPLC,EAOI,EAPJA,MACAhB,EAMI,EANJA,KACAV,EAKI,EALJA,MACA2B,EAII,EAJJA,YACA1C,EAGI,EAHJA,KACA2C,EAEI,EAFJA,MACAC,EACI,EADJA,SAEA,OACE,yBAAKhB,UAAU,cACH,2BAAOiB,QAASpB,GAAOgB,GACvB,2BAAOzC,KAAMA,EACNyB,KAAMA,EACNG,UAAYkB,IAAW,+BAAgC,CACrD,aAAcH,IAEhBD,YAAaA,EACb3B,MAAOA,EACP6B,SAAUA,IAEhBD,GAAS,yBAAKf,UAAU,oBAAoBe,KAgB7DH,EAAeO,aAAe,CAC5B/C,KAAM,QAGOwC,QCiEAQ,E,4MAxGZlD,MAAQ,CACN2B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPsB,OAAQ,I,EAGTC,S,uCAAW,WAAO1C,EAAU2C,GAAjB,yBAAA5B,EAAA,yDACT4B,EAAEC,iBADO,EAGuB,EAAKtD,MAA5B2B,EAHA,EAGAA,KAAMC,EAHN,EAGMA,MAAOC,EAHb,EAGaA,MAGV,KAATF,EANM,uBAOP,EAAKhB,SAAS,CAACwC,OAAQ,CAAExB,KAAM,sBAPxB,6BAUI,KAAVC,EAVM,uBAWP,EAAKjB,SAAS,CAACwC,OAAQ,CAAEvB,MAAO,uBAXzB,6BAcI,KAAVC,EAdM,wBAeP,EAAKlB,SAAS,CAACwC,OAAQ,CAAEtB,MAAO,uBAfzB,kCAmBH0B,EAAY,CAChB5B,OACAC,QACAC,SAtBO,UAyBSjB,IAAM4C,KAAN,6CAC8BD,GA1BvC,QAyBHzC,EAzBG,OA6BPJ,EAAS,CAACR,KAAM,cAAeK,QAASO,EAAIE,OAG9C,EAAKL,SAAS,CACZgB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPsB,OAAQ,KAGV,EAAKjC,MAAMuC,QAAQC,KAAK,KAvCf,4C,0DA2CXZ,SAAW,SAAAO,GAAC,OAAI,EAAK1C,SAAL,eAAiB0C,EAAEM,OAAOhC,KAAO0B,EAAEM,OAAO1C,S,uDAElD,IAAD,SAC+BF,KAAKf,MAAnC2B,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MAAOsB,EADrB,EACqBA,OAE5B,OACE,kBAAC9B,EAAD,MACI,SAAAJ,GAAU,IACDP,EAAaO,EAAbP,SACV,OACC,yBAAKoB,UAAU,aACjB,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,aACb,0BAAMsB,SAAW,EAAKA,SAAShB,KAAK,EAAM1B,IACxC,kBAAC,EAAD,CACEiC,MAAM,OACNhB,KAAK,OACLiB,YAAY,aACZ3B,MAAQU,EACRmB,SAAU,EAAKA,SACfD,MAAOM,EAAOxB,OAEhB,kBAAC,EAAD,CACEgB,MAAM,QACNhB,KAAK,QACLzB,KAAK,QACL0C,YAAY,cACZ3B,MAAQW,EACRkB,SAAU,EAAKA,SACfD,MAAOM,EAAOvB,QAEhB,kBAAC,EAAD,CACEe,MAAM,QACNhB,KAAK,QACLiB,YAAY,cACZ3B,MAAQY,EACRiB,SAAU,EAAKA,SACfD,MAAOM,EAAOtB,QAGhB,2BAAO3B,KAAK,SAASe,MAAM,cAC3Ba,UAAU,sC,GA5FIV,aCqHXwC,E,4MApHZ5D,MAAQ,CACN2B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPsB,OAAQ,I,EAiBTC,S,uCAAW,WAAO1C,EAAU2C,GAAjB,2BAAA5B,EAAA,yDACT4B,EAAEC,iBADO,EAGuB,EAAKtD,MAA5B2B,EAHA,EAGAA,KAAMC,EAHN,EAGMA,MAAOC,EAHb,EAGaA,MAGV,KAATF,EANM,uBAOP,EAAKhB,SAAS,CAACwC,OAAQ,CAAExB,KAAM,sBAPxB,6BAUI,KAAVC,EAVM,uBAWP,EAAKjB,SAAS,CAACwC,OAAQ,CAAEvB,MAAO,uBAXzB,6BAcI,KAAVC,EAdM,wBAeP,EAAKlB,SAAS,CAACwC,OAAQ,CAAEtB,MAAO,uBAfzB,kCAkBTgC,EAAa,CACjBlC,OACAC,QACAC,SAEYvB,EAAO,EAAKY,MAAM4C,MAAMC,OAAxBzD,GAvBC,UAyBSM,IAAMoD,IAAN,qDAAwD1D,GAAMuD,GAzBvE,QAyBH/C,EAzBG,OA2BTJ,EAAS,CAACR,KAAK,iBAAkBK,QAASO,EAAIE,OAG9C,EAAKL,SAAS,CACZgB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPsB,OAAQ,KAGV,EAAKjC,MAAMuC,QAAQC,KAAK,KArCf,4C,0DAyCXZ,SAAW,SAAAO,GAAC,OAAI,EAAK1C,SAAL,eAAiB0C,EAAEM,OAAOhC,KAAO0B,EAAEM,OAAO1C,S,6LAtDjDX,EAAOS,KAAKG,MAAM4C,MAAMC,OAAxBzD,G,SACUM,IAAMC,IAAN,qDAC6BP,I,OADzCQ,E,OAGAT,EAASS,EAAIE,KAEnBD,KAAKJ,SAAS,CACZgB,KAAMtB,EAAQsB,KACdC,MAAOvB,EAAQuB,MACfC,MAAOxB,EAAQwB,Q,qIA+CV,IAAD,SAC+Bd,KAAKf,MAAnC2B,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MAAOsB,EADrB,EACqBA,OAE5B,OACE,kBAAC9B,EAAD,MACI,SAAAJ,GAAU,IACDP,EAAaO,EAAbP,SACV,OACC,yBAAKoB,UAAU,aACjB,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,aACb,0BAAMsB,SAAW,EAAKA,SAAShB,KAAK,EAAM1B,IACxC,kBAAC,EAAD,CACEiC,MAAM,OACNhB,KAAK,OACLiB,YAAY,aACZ3B,MAAQU,EACRmB,SAAU,EAAKA,SACfD,MAAOM,EAAOxB,OAEhB,kBAAC,EAAD,CACEgB,MAAM,QACNhB,KAAK,QACLzB,KAAK,QACL0C,YAAY,cACZ3B,MAAQW,EACRkB,SAAU,EAAKA,SACfD,MAAOM,EAAOvB,QAEhB,kBAAC,EAAD,CACEe,MAAM,QACNhB,KAAK,QACLiB,YAAY,cACZ3B,MAAQY,EACRiB,SAAU,EAAKA,SACfD,MAAOM,EAAOtB,QAGhB,2BAAO3B,KAAK,SAASe,MAAM,iBAC3Ba,UAAU,sC,GAxGKV,aCDrB6C,EAAS,SAAC/C,GAAW,IACjBgD,EAAahD,EAAbgD,SACR,OACE,yBAAKpC,UAAU,2DACf,yBAAKA,UAAU,aACb,uBAAGqC,KAAK,IAAIrC,UAAU,gBAAgBoC,GAEtC,6BACE,wBAAIpC,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMO,GAAG,IAAIP,UAAU,YACrB,uBAAGA,UAAU,eAAb,WAGJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMO,GAAG,eAAeP,UAAU,YAClC,uBAAGA,UAAU,eAAb,UAGF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMO,GAAG,SAASP,UAAU,YAC5B,uBAAGA,UAAU,mBAAb,iBAUZmC,EAAOhB,aAAe,CACpBiB,SAAU,UAQGD,QC1CA,aACb,OACE,6BACE,wBAAInC,UAAU,aAAd,yBACA,uBAAGA,UAAU,QAAb,iCACA,uBAAGA,UAAU,kBAAb,mBCLS,aACb,OACE,6BACE,wBAAIA,UAAU,aACZ,0BAAMA,UAAU,eAAhB,OADF,oBAEA,uBAAGA,UAAU,QAAb,sCCwBSsC,E,4MA5BZpE,MAAQ,CACNqE,MAAO,GACPC,KAAM,I,kEAEa,IAAD,OACnBC,MAAM,gDACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAxD,GAAI,OAAI,EAAKL,SAAS,CAC1B0D,MAAOrD,EAAKqD,MACZC,KAAMtD,EAAKsD,Y,+BAQP,IAAD,EACiBvD,KAAKf,MAArBqE,EADD,EACCA,MAAOC,EADR,EACQA,KACf,OACE,6BACE,4BAAKD,GACL,2BAAIC,Q,GAvBQlD,aCmCLuD,G,6KAtBX,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACA,yBAAK7C,UAAU,OACb,kBAAC,EAAD,CAAQoC,SAAS,oBACf,yBAAKpC,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,IAAIC,UAAWvC,IACjC,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,eAAeC,UAAW5B,IAC5C,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,oBAAoBC,UAAWlB,IACjD,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,QAAQC,UAAWV,IACrC,kBAAC,IAAD,CAAOU,UAAWE,a,GAdhB5D,cCDE6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStB,MACvB,2DCbNuB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpB,MAAK,SAAAqB,GACJA,EAAaC,gBAEdC,OAAM,SAAAlD,GACLmD,QAAQnD,MAAMA,EAAMoD,c","file":"static/js/main.ba368e06.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch(action.type){\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact =>\n        contact.id !== action.payload)\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n        contact.id === action.payload.id ? (contact \n        = action.payload): contact)\n      }\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [\n      \n    ],\n    dispatch: action => this.setState(state => \n    reducer(state, action))\n  };\n\n  async componentDidMount(){\n    const res = await axios\n    .get\n    ('https://jsonplaceholder.typicode.com/users')\n      \n    this.setState({contacts: res.data})\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n   await axios.delete\n    (`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: 'DELETE_CONTACT', payload: id}); \n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n          <div className=\"card card-body mb-3\">\n            <h4>\n              {name}{' '} \n                <i \n                onClick={() => \n                  this.setState({showContactInfo: \n                  !this.state.showContactInfo})}\n                className=\"fas fa-sort-down\" \n                style={{cursor:'pointer'}}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red'}}\n                  onClick={this.onDeleteClick.bind\n                    (this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i \n                  className=\"fas fa-pencil-alt\"\n                  style={{\n                    cursor: 'pointer',\n                    float: 'right',\n                    color: 'black',\n                    marginRight: '1rem'\n                  }}\n                  >\n                  </i> \n                </Link>\n              </h4>\n          {showContactInfo ? (\n            <ul className=\"list-group\">\n              <li className=\"list-group-item\">Email: {email}</li>\n              <li className=\"list-group-item\">Phone: {phone}</li>\n            </ul>\n          ) : null}    \n        </div>\n        );\n      }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n}\n\nexport default Contact;\n\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport  { Consumer } from '../../context';\n\n\n class Contacts extends Component {\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n            {contacts.map(contact => (\n            <Contact \n            key={contact.id}\n            contact={contact} \n            />\n          ))}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder, \n  type,\n  error,\n  onChange\n}) => {\n  return (\n    <div className=\"form-group\">\n                <label htmlFor={name}>{label}</label>\n                <input type={type}\n                       name={name}\n                       className= {classnames('form-control form-control-lg', {\n                         'is-invalid': error\n                       })}\n                       placeholder={placeholder}\n                       value={value}\n                       onChange={onChange}\n                />\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n                \n            </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\n class AddContact extends Component {\n   state = {\n     name: '',\n     email: '',\n     phone: '',\n     errors: {}\n   };\n\n    onSubmit = async (dispatch, e) => {\n      e.preventDefault();\n      \n      const  { name, email, phone } = this.state;\n\n      //Check For Errors\n      if(name === ''){\n        this.setState({errors: { name: 'Name is required' }});\n        return;\n      }\n      if(email === ''){\n        this.setState({errors: { email: 'Email is required' }});\n        return;\n      }\n      if(phone === ''){\n        this.setState({errors: { phone: 'Phone is required' }});\n        return;\n      }\n\n      const newContact ={\n        name,\n        email,\n        phone\n      };\n\n      const res = await axios.post(\n        `https://jsonplaceholder.typicode.com/users`, newContact\n        );\n\n        dispatch({type: 'ADD_CONTACT', payload: res.data});\n\n    // Clear State\n      this.setState({\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n      });\n\n      this.props.history.push('/');\n\n    };\n  \n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors} = this.state;\n\n    return(\n      <Consumer>\n         {value => {\n           const { dispatch } = value;\n         return (\n          <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit= {this.onSubmit.bind(this, dispatch)}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value= {name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value= {email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value= {phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            \n            <input type=\"submit\" value=\"Add Contact\"\n            className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n         )\n      }}\n      </Consumer>\n      )\n    }\n  }\n\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\n class EditContact extends Component {\n   state = {\n     name: '',\n     email: '',\n     phone: '',\n     errors: {}\n   };\n\n   async componentDidMount() {\n     const { id } = this.props.match.params;\n     const res = await axios.get\n     (`https://jsonplaceholder.typicode.com/users/${id}`);\n\n     const contact =res.data;\n\n     this.setState({\n       name: contact.name,\n       email: contact.email,\n       phone: contact.phone\n     });\n   }\n\n    onSubmit = async (dispatch, e) => {\n      e.preventDefault();\n      \n      const  { name, email, phone } = this.state;\n\n      //Check For Errors\n      if(name === ''){\n        this.setState({errors: { name: 'Name is required' }});\n        return;\n      }\n      if(email === ''){\n        this.setState({errors: { email: 'Email is required' }});\n        return;\n      }\n      if(phone === ''){\n        this.setState({errors: { phone: 'Phone is required' }});\n        return;\n      }\nconst updContact = {\n  name,\n  email,\n  phone\n}\n      const { id } = this.props.match.params;\n\n      const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n      dispatch({type:'UPDATE_CONTACT', payload: res.data});\n\n    // Clear State\n      this.setState({\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n      });\n\n      this.props.history.push('/');\n\n    };\n  \n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors} = this.state;\n\n    return(\n      <Consumer>\n         {value => {\n           const { dispatch } = value;\n         return (\n          <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit= {this.onSubmit.bind(this, dispatch)}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value= {name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value= {email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value= {phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            \n            <input type=\"submit\" value=\"Update Contact\"\n            className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n         )\n      }}\n      </Consumer>\n      )\n    }\n  }\n\n\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\"> \n    <div className=\"container\">\n      <a href=\"/\" className=\"navbar-brand\">{branding}\n      </a>\n      <div>\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-link\">\n              <i className=\"fas fa-home\"> Home</i>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/contact/add\" className=\"nav-link\">\n            <i className=\"fas fa-plus\"> Add</i>\n            </Link>\n            </li>\n          <li className=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\">\n            <i className=\"fas fa-question\"> About</i>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = { \n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\n\nexport default Header;\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span>  Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist.</p>\n    </div>\n  )\n}\n\n","import React, { Component } from 'react'\n\n class Test extends Component {\n   state = {\n     title: '',\n     body: ''\n   };\n  componentDidMount () {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(data => this.setState({\n        title: data.title,\n        body: data.body\n      }))\n  }\n\n  // componentDidUpdate () {\n  //   console.log('componentDidUpdate...');\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact  from './components/contacts/AddContact';\nimport EditContact  from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\"  />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}